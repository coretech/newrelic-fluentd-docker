<system>
    log_level "#{ENV['LOG_LEVEL']}"
</system>

<source>
    @type forward
    port 24225
    bind 0.0.0.0
</source>

<source>
  @type http
  port 443
  bind 0.0.0.0
  body_size_limit 32m
  keepalive_timeout 10s
</source>

<source>
  @type http
  port 80
  bind 0.0.0.0
  body_size_limit 32m
  keepalive_timeout 10s
</source>

<filter **>
    @type parser

    <parse>
        @type multi_format

        <pattern>
  	        format /^(?<datetime>[^\]\[]*)\s(?<extra1>\s*\d+\s*-+\s*)?((\[\s*)?(\x1b\[[0-9;]*m)?(?<level>trace|debug|info|warn|error|alert|fatal)(\x1b\[[0-9;]*m)?(\s*\])?).*?(?<extra2>\s*\d+\s*-+\s*)?.*?\s*((\[)?\s*((\x1b\[[0-9;]*m)?(?<firstWord>[^\s\[\]]*))\s*(\])?)\s*((?<message>.*)(\x1b\[[0-9;]*m)?)$/
  	        ignorecase true
        </pattern>
  	    <pattern>
  	        format /^(?<datetime>[^\]\[]*)\s*(?<extra>\d+\s*-+)\s*((\[\s*)?(?<app>[^\s\[\]]*)(\s*\])?)\s*(?<message>.*)$/
  	    </pattern>
        <pattern>
            format /^(?<message>.*)$/
        </pattern>
    </parse>

    key_name log
    reserve_data true
</filter>

<label @FLUENT_LOG>
    <filter fluent.*>
        @type record_transformer
        <record>
            fluentd_host "#{Socket.gethostname}"
        </record>
    </filter>
    <match loki.*>
        @type loki
        url "#{ENV['LOKI_GATEWAY']}"
        extra_labels {"env":"admi-qa"}
        tenant "#{ENV['TENANT']}"
        <buffer>
            flush_interval 10s
            flush_at_shutdown true
        </buffer>
    </match>
    <match fluent.*>
        @type newrelic
        api_key "#{ENV['API_KEY']}"
        base_uri "#{ENV['BASE_URI']}"
    </match>
</label>

<match **>
    @type loki
    url "#{ENV['LOKI_GATEWAY']}"
    extra_labels "#{ENV['LABELS']}"
    tenant "#{ENV['TENANT']}"
    <buffer>
        flush_interval 10s
        flush_at_shutdown true
    </buffer>
</match>

<match **>
    @type newrelic
    api_key "#{ENV['API_KEY']}"
    base_uri "#{ENV['BASE_URI']}"
</match>
